using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Diagnostics;
using System.Linq;
using System.Windows.Forms;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace LightenedDream.My
{

	[System.Runtime.CompilerServices.CompilerGeneratedAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0"), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
	internal sealed partial class MySettings : global::System.Configuration.ApplicationSettingsBase
	{

		private static MySettings defaultInstance = (MySettings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new MySettings());

		#region "My.Settings Auto-Save Functionality"

		private static bool addedHandler;

		private static object addedHandlerLockObject = new object();
		[System.Diagnostics.DebuggerNonUserCodeAttribute(), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static void AutoSaveSettings(global::System.Object sender, global::System.EventArgs e)
		{
			if (MyProject.Application.SaveMySettingsOnExit) {
				LightenedDream.My.Settings.Save();
			}
		}
		#endregion

		public static MySettings Default {
			get {

				if (!addedHandler) {
					lock (addedHandlerLockObject) {
						if (!addedHandler) {
							MyProject.Application.Shutdown += AutoSaveSettings;
							addedHandler = true;
						}
					}
				}
				return defaultInstance;
			}
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("Verdana, 8.25pt")]
		public global::System.Drawing.Font Font {
			get { return (global::System.Drawing.Font)this["Font"]; }
			set { this["Font"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("LightSteelBlue")]
		public global::System.Drawing.Color FormBackColor {
			get { return (global::System.Drawing.Color)this["FormBackColor"]; }
			set { this["FormBackColor"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("SteelBlue")]
		public global::System.Drawing.Color TitleBackColor {
			get { return (global::System.Drawing.Color)this["TitleBackColor"]; }
			set { this["TitleBackColor"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("White")]
		public global::System.Drawing.Color TitleForeColor {
			get { return (global::System.Drawing.Color)this["TitleForeColor"]; }
			set { this["TitleForeColor"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("MidnightBlue")]
		public global::System.Drawing.Color FormForeColor {
			get { return (global::System.Drawing.Color)this["FormForeColor"]; }
			set { this["FormForeColor"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("White")]
		public global::System.Drawing.Color TextBackColor {
			get { return (global::System.Drawing.Color)this["TextBackColor"]; }
			set { this["TextBackColor"] = value; }
		}

		[System.Configuration.UserScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.DefaultSettingValueAttribute("False")]
		public bool ShowMerlin {
			get { return Convert.ToBoolean(this["ShowMerlin"]); }
			set { this["ShowMerlin"] = value; }
		}

		[System.Configuration.ApplicationScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl), System.Configuration.DefaultSettingValueAttribute("http://lucid-code.com/Services/Communication/EmailService.asmx")]
		public string Lightened_Dream_III_EmailService_EmailService {
			get { return Convert.ToString(this["Lightened_Dream_III_EmailService_EmailService"]); }
		}

		[System.Configuration.ApplicationScopedSettingAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl), System.Configuration.DefaultSettingValueAttribute("http://lucid-code.com/Services/Communication/EmailService.asmx")]
		public string Liquid_Dream_III_EmailService_EmailService {
			get { return Convert.ToString(this["Liquid_Dream_III_EmailService_EmailService"]); }
		}
	}
}

namespace LightenedDream.My
{

	[Microsoft.VisualBasic.HideModuleNameAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	static internal class MySettingsProperty
	{

		[System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")]
		static internal global::LightenedDream.My.MySettings Settings {
			get { return global::LightenedDream.My.MySettings.Default; }
		}
	}
}
